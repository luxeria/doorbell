version: 2.1

orbs:
  builder: linuxkitrpi/builder@0.1.2

jobs:
  build_pkg:
    parameters:
      arch:
        type: enum
        enum: ["amd64", "arm64"]
      setup_remote_docker:
        type: boolean
    executor: builder/<< parameters.arch >>
    steps:
      - checkout
      - when:
          condition: << parameters.setup_remote_docker >>
          steps:
            - setup_remote_docker:
                version: "18.09.3"
      - builder/wait_for_docker
      - run:
          name: Build Docker Image for << parameters.arch >>
          command: |
            linuxkit-cli.sh agent start .
            linuxkit-cli.sh pkg build linuxkit/pkg
            linuxkit-cli.sh save -d build $(linuxkit-cli.sh pkg show-tag linuxkit/pkg)
      - persist_to_workspace:
          root: build
          paths:
            - "*.tar"
  push_pkg:
    executor: builder/amd64
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /run/images
      - run:
          name: Restore Images from Workspace
          command: find /run/images -type f -name '*.tar' -exec docker load -i '{}' \;
      - run:
          name: Log in to Docker
          command: docker login -u "$DOCKER_LOGIN" -p "$DOCKER_PASSWORD"
      - run:
          name: Pushing Docker Image
          command: |
            linuxkit-cli.sh agent start .
            linuxkit-cli.sh push $(linuxkit-cli.sh pkg show-tag linuxkit/pkg)
  build_raspi_image:
    executor: builder/arm64
    steps:
      - checkout
      - builder/wait_for_docker
      - run:
          name: Build LinuxKit raspi.yml
          command: |
            # run linuxkit build on raspi.yml
            linuxkit-cli.sh agent start .
            awk -f template.awk linuxkit/images/raspi.yml | tee doorbell.yml | \
              linuxkit-cli.sh yml rpi3-squashfs-build -o - - > doorbell.img

            # encrypt created artifacts
            RECIPIENTS="7E18B2FAAD7378D6 05600B0C83EA347B"
            gpg --recv-keys $RECIPIENTS
            mkdir -p /run/linuxkit/
            tar cvz doorbell.yml doorbell.img | gpg --encrypt --trust-model always \
              $(printf ' --recipient %s' $RECIPIENTS) \
              --output /run/linuxkit/doorbell.tar.gz.gpg
          no_output_timeout: 20m
      - store_artifacts:
          path: /run/linuxkit/doorbell.tar.gz.gpg
workflows:
  version: 2
  build_and_push:
    jobs:
      - build_pkg:
          name: build_pkg_amd64
          arch: amd64
          setup_remote_docker: true
      - build_pkg:
          name: build_pkg_arm64
          arch: arm64
          setup_remote_docker: false
      - push_pkg:
          context: dockerhub-creds
          requires:
            - build_pkg_amd64
            - build_pkg_arm64
          filters:
            branches:
              only: master
      - build_raspi_image:
          context: raspi-values
          filters:
            branches:
              only: master